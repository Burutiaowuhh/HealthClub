package com.mao.healthclub.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class Course_orderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public Course_orderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTradeNumberIsNull() {
            addCriterion("trade_number is null");
            return (Criteria) this;
        }

        public Criteria andTradeNumberIsNotNull() {
            addCriterion("trade_number is not null");
            return (Criteria) this;
        }

        public Criteria andTradeNumberEqualTo(String value) {
            addCriterion("trade_number =", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberNotEqualTo(String value) {
            addCriterion("trade_number <>", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberGreaterThan(String value) {
            addCriterion("trade_number >", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberGreaterThanOrEqualTo(String value) {
            addCriterion("trade_number >=", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberLessThan(String value) {
            addCriterion("trade_number <", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberLessThanOrEqualTo(String value) {
            addCriterion("trade_number <=", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberLike(String value) {
            addCriterion("trade_number like", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberNotLike(String value) {
            addCriterion("trade_number not like", value, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberIn(List<String> values) {
            addCriterion("trade_number in", values, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberNotIn(List<String> values) {
            addCriterion("trade_number not in", values, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberBetween(String value1, String value2) {
            addCriterion("trade_number between", value1, value2, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andTradeNumberNotBetween(String value1, String value2) {
            addCriterion("trade_number not between", value1, value2, "tradeNumber");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdIsNull() {
            addCriterion("course_plan_id is null");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdIsNotNull() {
            addCriterion("course_plan_id is not null");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdEqualTo(Integer value) {
            addCriterion("course_plan_id =", value, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdNotEqualTo(Integer value) {
            addCriterion("course_plan_id <>", value, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdGreaterThan(Integer value) {
            addCriterion("course_plan_id >", value, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("course_plan_id >=", value, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdLessThan(Integer value) {
            addCriterion("course_plan_id <", value, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdLessThanOrEqualTo(Integer value) {
            addCriterion("course_plan_id <=", value, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdIn(List<Integer> values) {
            addCriterion("course_plan_id in", values, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdNotIn(List<Integer> values) {
            addCriterion("course_plan_id not in", values, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdBetween(Integer value1, Integer value2) {
            addCriterion("course_plan_id between", value1, value2, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCoursePlanIdNotBetween(Integer value1, Integer value2) {
            addCriterion("course_plan_id not between", value1, value2, "coursePlanId");
            return (Criteria) this;
        }

        public Criteria andCustomIdIsNull() {
            addCriterion("custom_id is null");
            return (Criteria) this;
        }

        public Criteria andCustomIdIsNotNull() {
            addCriterion("custom_id is not null");
            return (Criteria) this;
        }

        public Criteria andCustomIdEqualTo(Integer value) {
            addCriterion("custom_id =", value, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdNotEqualTo(Integer value) {
            addCriterion("custom_id <>", value, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdGreaterThan(Integer value) {
            addCriterion("custom_id >", value, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("custom_id >=", value, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdLessThan(Integer value) {
            addCriterion("custom_id <", value, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdLessThanOrEqualTo(Integer value) {
            addCriterion("custom_id <=", value, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdIn(List<Integer> values) {
            addCriterion("custom_id in", values, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdNotIn(List<Integer> values) {
            addCriterion("custom_id not in", values, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdBetween(Integer value1, Integer value2) {
            addCriterion("custom_id between", value1, value2, "customId");
            return (Criteria) this;
        }

        public Criteria andCustomIdNotBetween(Integer value1, Integer value2) {
            addCriterion("custom_id not between", value1, value2, "customId");
            return (Criteria) this;
        }

        public Criteria andPayStatusIsNull() {
            addCriterion("pay_status is null");
            return (Criteria) this;
        }

        public Criteria andPayStatusIsNotNull() {
            addCriterion("pay_status is not null");
            return (Criteria) this;
        }

        public Criteria andPayStatusEqualTo(Boolean value) {
            addCriterion("pay_status =", value, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusNotEqualTo(Boolean value) {
            addCriterion("pay_status <>", value, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusGreaterThan(Boolean value) {
            addCriterion("pay_status >", value, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("pay_status >=", value, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusLessThan(Boolean value) {
            addCriterion("pay_status <", value, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusLessThanOrEqualTo(Boolean value) {
            addCriterion("pay_status <=", value, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusIn(List<Boolean> values) {
            addCriterion("pay_status in", values, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusNotIn(List<Boolean> values) {
            addCriterion("pay_status not in", values, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusBetween(Boolean value1, Boolean value2) {
            addCriterion("pay_status between", value1, value2, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("pay_status not between", value1, value2, "payStatus");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeIsNull() {
            addCriterion("create_order_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeIsNotNull() {
            addCriterion("create_order_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeEqualTo(Date value) {
            addCriterion("create_order_time =", value, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeNotEqualTo(Date value) {
            addCriterion("create_order_time <>", value, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeGreaterThan(Date value) {
            addCriterion("create_order_time >", value, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_order_time >=", value, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeLessThan(Date value) {
            addCriterion("create_order_time <", value, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_order_time <=", value, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeIn(List<Date> values) {
            addCriterion("create_order_time in", values, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeNotIn(List<Date> values) {
            addCriterion("create_order_time not in", values, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeBetween(Date value1, Date value2) {
            addCriterion("create_order_time between", value1, value2, "createOrderTime");
            return (Criteria) this;
        }

        public Criteria andCreateOrderTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_order_time not between", value1, value2, "createOrderTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table course_order
     *
     * @mbg.generated do_not_delete_during_merge Tue Mar 10 23:02:11 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table course_order
     *
     * @mbg.generated Tue Mar 10 23:02:11 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}